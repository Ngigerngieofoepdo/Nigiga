local Players = game:GetService("Players")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local partsFolder = workspace:WaitForChild("Map"):WaitForChild("Ignore"):WaitForChild("Tools") -- Adjusted for parts
local remote = workspace.Services:WaitForChild("PickupTool")

-- Create Screen GUI
local screenGui = Instance.new("ScreenGui", playerGui)
screenGui.Name = "PartPickerGui"

-- Create Main Button to Open Scroll Frame
local openButton = Instance.new("TextButton", screenGui)
openButton.Size = UDim2.new(0.2, 0, 0.1, 0)
openButton.Position = UDim2.new(0.4, 0, 0.1, 0)
openButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Black background
openButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text
openButton.Text = "Show Parts"

-- Create Scroll Frame
local scrollingFrame = Instance.new("Frame", screenGui)
scrollingFrame.Size = UDim2.new(0.5, 0, 0.5, 0)
scrollingFrame.Position = UDim2.new(0.25, 0, 0.25, 0)
scrollingFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Black background
scrollingFrame.Visible = false

-- Create UI List Layout for Scroll Frame
local uiListLayout = Instance.new("UIListLayout", scrollingFrame)
uiListLayout.FillDirection = Enum.FillDirection.Vertical
uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder
uiListLayout.Padding = UDim.new(0, 5)

-- Create Close Button
local closeButton = Instance.new("TextButton", scrollingFrame)
closeButton.Size = UDim2.new(0.2, 0, 0.1, 0)
closeButton.Position = UDim2.new(0.4, 0, 0, 0)
closeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Red background
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text
closeButton.Text = "Close"

-- Function to create buttons for each part
local function createPartButton(part)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, 0, 0, 50)
    button.Text = part.Name
    button.BackgroundColor3 = Color3.fromRGB(50, 50, 50) -- Dark grey
    button.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text
    button.Parent = scrollingFrame

    button.MouseButton1Click:Connect(function()
        -- Store the selected part name for activation
        screenGui:SetAttribute("SelectedPart", part.Name)
    end)
end

-- Populate the scrolling frame with parts
for _, part in ipairs(partsFolder:GetChildren()) do
    if part:IsA("Part") then
        createPartButton(part)
    end
end

-- Button to open the scroll frame
openButton.MouseButton1Click:Connect(function()
    scrollingFrame.Visible = true
end)

-- Close button functionality
closeButton.MouseButton1Click:Connect(function()
    scrollingFrame.Visible = false
end)

-- Create TP and Get Button
local tpButton = Instance.new("TextButton", screenGui)
tpButton.Size = UDim2.new(0.2, 0, 0.1, 0)
tpButton.Position = UDim2.new(0.4, 0, 0.7, 0)
tpButton.BackgroundColor3 = Color3.fromRGB(0, 0, 255) -- Blue background
tpButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text
tpButton.Text = "TP and Get"

-- TP and Get functionality
tpButton.MouseButton1Click:Connect(function()
    local selectedPartName = screenGui:GetAttribute("SelectedPart")
    local selectedPart = partsFolder:FindFirstChild(selectedPartName)
    
    if selectedPart then
        local args = {
            [1] = "#" .. selectedPart.Name, -- Assuming the remote needs the formatted name
            [2] = selectedPart.Name -- The full part name
        }
        remote:InvokeServer(unpack(args))
        player.Character.HumanoidRootPart.CFrame = selectedPart.CFrame -- Teleport to the part
    else
        warn("No part selected or part not found.")
    end
end)

print("Part Picker GUI created successfully!")
